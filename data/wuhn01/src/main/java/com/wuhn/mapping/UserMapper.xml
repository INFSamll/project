<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wuhn.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.wuhn.module.User" >
    <id column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="picture" property="picture" jdbcType="LONGVARBINARY" />
    <result column="role" property="role" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    userid, nickname, email, password, name, gender, birthday, picture, role
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userid = #{userid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where userid = #{userid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.wuhn.module.User" >
    insert into user (userid, nickname, email, 
      password, name, gender, 
      birthday, picture, role
      )
    values (#{userid,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
      #{birthday,jdbcType=VARCHAR}, #{picture,jdbcType=LONGVARBINARY}, #{role,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wuhn.module.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="picture != null" >
        picture,
      </if>
      <if test="role != null" >
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="picture != null" >
        #{picture,jdbcType=LONGVARBINARY},
      </if>
      <if test="role != null" >
        #{role,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wuhn.module.User" >
    update user
    <set >
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="picture != null" >
        picture = #{picture,jdbcType=LONGVARBINARY},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=VARCHAR},
      </if>
    </set>
    where userid = #{userid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wuhn.module.User" >
    update user
    set nickname = #{nickname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=LONGVARBINARY},
      role = #{role,jdbcType=VARCHAR}
    where userid = #{userid,jdbcType=VARCHAR}
  </update>
  
  <!-- 查询所有用户 -->
  <select id="selectAll" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
  	from user 
  	
  </select>
  
  <!-- 查询该用户的所有信息，包括角色 -->
  <resultMap type="com.wuhn.module.User" id="BaseResultMap2">
      	<id column="userid" property="userid" jdbcType="VARCHAR" />
	    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
	    <result column="email" property="email" jdbcType="VARCHAR" />
	    <result column="password" property="password" jdbcType="VARCHAR" />
	    <result column="name" property="name" jdbcType="VARCHAR" />
	    <result column="gender" property="gender" jdbcType="INTEGER" />
	    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
	    <result column="picture" property="picture" jdbcType="LONGVARBINARY" />
	    <result column="role" property="role" jdbcType="VARCHAR" />
	  <!-- picture 
      <association property="picture" javaType="com.wuhn.module.Picture">
        <id column="picture" jdbcType="VARCHAR" property="picture" />
   		<result column="userid" jdbcType="VARCHAR" property="userid" />
   		<result column="directory" jdbcType="VARCHAR" property="directory" />
   		<result column="imageName" jdbcType="VARCHAR" property="imagename" />
   		<result column="identity" jdbcType="INTEGER" property="identity" />
      </association> 
      --> 
      <!-- ofType指定roles集合中的对象类型 -->
      <collection property="roles" ofType="com.wuhn.module.Role">
        <id column="roleid" jdbcType="VARCHAR" property="roleid" />
	    <result column="rolePermission" jdbcType="VARCHAR" property="rolepermission" />
	    <result column="identify" jdbcType="VARCHAR" property="identify" />
	    <result column="description" jdbcType="VARCHAR" property="description" />
	    <result column="orderno" jdbcType="INTEGER" property="orderno" />
      </collection>    
  </resultMap>
  
  <!-- 根据主键查找用户 -->
  <select id="selectAllUserRoleByPrimaryKey" resultMap="BaseResultMap2"  parameterType="java.lang.String">
  	select * from user u,  role r
	where u.role = r.identify 
		  and u.userid = #{userid,jdbcType=VARCHAR} 
  	<!--
  	select * from user u,  role r, picture p
	where u.role = r.identify 
	and u.picture = p.picture
		  and u.userid = #{userid,jdbcType=VARCHAR} 	
	 -->
	<!--  
	select * from user u
	left join role r on u.role = r.identify
	left join picture p on u.picture = p.picture
	and u.userid = #{userid,jdbcType=VARCHAR} 
	-->
  </select>
  
  <!-- 根据email查找用户 -->
  <select id="selectUserRoleByName" resultMap="BaseResultMap2"  parameterType="java.lang.String">
  	select * from user u,  role r
	where u.role = r.identify and u.email = #{email,jdbcType=VARCHAR}
  </select>
  
  <!-- 查询用户总数 -->
  <select id="selectUserCount" resultType="int">
  	select count(*) from user
  </select>
  
  <!-- 分页、条件查询 -->
  <select id="selectUserbyPages" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
  	from user
  	<trim prefix="WHERE" prefixOverrides="AND |OR ">  
      <if test="nickname != null">  
         nickname = #{nickname,jdbcType=VARCHAR}  
      </if>  
      <if test="email != null">  
         and email like #{email,jdbcType=VARCHAR}  
      </if>  
    </trim>   
    <if test="limit != null and offset != null">
    	 limit #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
    </if>  
    
  </select>
  
  <!-- 批量删除 -->
  <delete id="batchDeleteByPrimaryKey" parameterType="java.util.List">
		delete from user where userid in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")"> 
			#{item} 
		</foreach>
  </delete>
  
  <!-- 根据某一个属性查询 -->
  <select id="selectByUser" resultMap="BaseResultMap" parameterType="com.wuhn.module.User">
  	select 
  	<include refid="Base_Column_List" />
  	from user
  	<where>
  		<if test="userid != null">AND userid = #{userid,jdbcType=VARCHAR}</if>
  		<if test="nickname != null">AND nickname = #{nickname,jdbcType=VARCHAR}</if>
  		<if test="email != null">AND email = #{email,jdbcType=VARCHAR}</if>
  		<if test="password != null">AND password = #{password,jdbcType=VARCHAR}</if>
  		<if test="gender != null">AND gender = #{gender,jdbcType=VARCHAR}</if>
  		<if test="birthday != null">AND birthday = #{birthday,jdbcType=VARCHAR}</if>
  		<if test="picture != null">AND picture = #{picture,jdbcType=LONGVARBINARY}</if>
  		<if test="role != null">AND role = #{role,jdbcType=VARCHAR}</if>
  	</where>
  </select>
    
</mapper>